pipeline {
    agent any
    stages {
        stage ('Build App') {
            parallel {
                stage ('Build Frontend') {
                    steps {
                        build([
                            job       : 'build-frontend',
                            wait      : true,
                        ])
                    }
                }
                stage ('Build Backend') {
                    steps {
                        build([
                            job       : 'build-backend',
                            wait      : true
                        ])
                    }
                }
            }
        }
        stage ('Copy Artifacts') {
            steps {
                script {
                    copyArtifacts(
                        projectName: 'build-backend',
                        selector: artifactSelector,
                        target: '.',
                        fingerprintArtifacts: true
                    )
                    copyArtifacts(
                        projectName: 'build-frontend',
                        selector: artifactSelector,
                        target: './build/resources/static'
                    )
                }
            }
        }
        stage ('Assemble Jar') {
            steps {
                sh 'chmod +x ./gradlew'
                sh './gradlew clean assemble'
            }
            post {
                success {
                    archiveArtifacts artifacts: 'build/libs/*.jar', target: './build/libs/'
                    archiveArtifacts artifacts: 'build/resolvedMainClassName', target: './build'
                }
            }
        }
    }
}

